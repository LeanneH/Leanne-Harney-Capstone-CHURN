----question #1
SELECT *
 FROM subscriptions
 LIMIT 100;

----question #2
SELECT 
 	MIN(subscription_start) AS 'first_subscription_date', 
  MAX(subscription_start) AS 'latest_subscription_date'
FROM subscriptions;

----question #3
WITH months AS (
SELECT
  	'2017-01-01' AS 'first_day',
  	'2017-01-31' AS 'last_day'
UNION
 SELECT
  	'2017-02-01' AS 'first_day',
  	'2017-02-28' AS 'last_day'
UNION
 SELECT
  	'2017-03-01' AS 'first_day',
  	'2017-03-31' AS 'last_day'
  )
SELECT *
FROM months;

----question #4
WITH months AS (
SELECT
  	'2017-01-01' AS 'first_day',
  	'2017-01-31' AS 'last_day'
UNION
 SELECT
  	'2017-02-01' AS 'first_day',
  	'2017-02-28' AS 'last_day'
UNION
 SELECT
  	'2017-03-01' AS 'first_day',
  	'2017-03-31' AS 'last_day'),

cross_join AS
(SELECT *
FROM subscriptions
CROSS JOIN months)

SELECT *
FROM cross_join;

----question #5
WITH months AS (
SELECT
  	'2017-01-01' AS 'first_day',
  	'2017-01-31' AS 'last_day'
UNION
 SELECT
  	'2017-02-01' AS 'first_day',
  	'2017-02-28' AS 'last_day'
UNION
 SELECT
  	'2017-03-01' AS 'first_day',
  	'2017-03-31' AS 'last_day'),

cross_join AS
(SELECT *
FROM subscriptions
CROSS JOIN months),

status AS
(SELECT cross_join.id, strftime('%m', first_day) AS 'month',
CASE
  WHEN segment = 87
 		AND (subscription_start < first_day)
    AND (subscription_end > first_day
    OR subscription_end IS NULL)
 THEN 1
 ELSE 0
END AS 'is_active_87',
 
 CASE
  WHEN segment = 30
 		AND (subscription_start < first_day)
    AND (subscription_end > first_day
    OR subscription_end IS NULL)
 THEN 1
 ELSE 0
END AS 'is_active_30' 
 FROM cross_join)
 
SELECT *
FROM status; 

----question #6
WITH months AS (
SELECT
  	'2017-01-01' AS 'first_day',
  	'2017-01-31' AS 'last_day'
UNION
 SELECT
  	'2017-02-01' AS 'first_day',
  	'2017-02-28' AS 'last_day'
UNION
 SELECT
  	'2017-03-01' AS 'first_day',
  	'2017-03-31' AS 'last_day'),

cross_join AS
(SELECT *
FROM subscriptions
CROSS JOIN months),

status AS
(SELECT cross_join.id, strftime('%m', first_day) AS 'month',

CASE
  WHEN segment = 87
 		AND (subscription_start < first_day)
    AND (subscription_end > first_day
    OR subscription_end IS NULL)
 THEN 1
 ELSE 0
END AS 'is_active_87',
 
CASE
  WHEN segment = 30
 		AND (subscription_start < first_day)
    AND (subscription_end > first_day
    OR subscription_end IS NULL)
 THEN 1
 ELSE 0
END AS 'is_active_30',

 
CASE
 	WHEN segment = 87
 	AND (subscription_end BETWEEN first_day AND last_day)
THEN 1
ELSE 0
END AS 'is_canceled_87', 

 CASE
 	WHEN segment = 30
 	AND (subscription_end BETWEEN first_day AND last_day)
THEN 1
ELSE 0
END AS 'is_canceled_30'
FROM cross_join)
 
SELECT *
FROM status; 

---question #7
WITH months AS (
SELECT
  	'2017-01-01' AS 'first_day',
  	'2017-01-31' AS 'last_day'
UNION
 SELECT
  	'2017-02-01' AS 'first_day',
  	'2017-02-28' AS 'last_day'
UNION
 SELECT
  	'2017-03-01' AS 'first_day',
  	'2017-03-31' AS 'last_day'),

cross_join AS
(SELECT *
FROM subscriptions
CROSS JOIN months),

status AS
(SELECT cross_join.id, strftime('%m', first_day) AS 'month',
CASE
  WHEN segment = 87
 		AND (subscription_start < first_day)
    AND (subscription_end > first_day
    OR subscription_end IS NULL)
 THEN 1
 ELSE 0
END AS 'is_active_87',
 
CASE
 	WHEN segment = 87
 	AND (subscription_end BETWEEN first_day AND last_day)
THEN 1
ELSE 0
END AS 'is_canceled_87',
 
CASE
  WHEN segment = 30
 		AND (subscription_start < first_day)
    AND (subscription_end > first_day
    OR subscription_end IS NULL)
 THEN 1
 ELSE 0
END AS 'is_active_30',
 
 CASE
 	WHEN segment = 30
 	AND (subscription_end BETWEEN first_day AND last_day)
THEN 1
ELSE 0
END AS 'is_canceled_30'
FROM cross_join),

status_aggregate AS
(SELECT month,
SUM(is_active_87) AS 'sum_active_87',
SUM(is_active_30) AS 'sum_active_30',
SUM(is_canceled_87) AS 'sum_canceled_87',
SUM(is_canceled_30) AS 'sum_canceled_30'
FROM status
GROUP BY month)
 
SELECT *
FROM status_aggregate; 

----question #8
WITH months AS (
SELECT
  	'2017-01-01' AS 'first_day',
  	'2017-01-31' AS 'last_day'
UNION
 SELECT
  	'2017-02-01' AS 'first_day',
  	'2017-02-28' AS 'last_day'
UNION
 SELECT
  	'2017-03-01' AS 'first_day',
  	'2017-03-31' AS 'last_day'),
cross_join AS
(SELECT *
FROM subscriptions
CROSS JOIN months),

status AS
(SELECT cross_join.id, strftime('%m', first_day) AS 'month',
CASE
  WHEN segment = 87
 		AND (subscription_start < first_day)
    AND (subscription_end > first_day
    OR subscription_end IS NULL)
 THEN 1
 ELSE 0
END AS 'is_active_87',
 
CASE
 	WHEN segment = 87
 	AND (subscription_end BETWEEN first_day AND last_day)
THEN 1
ELSE 0
END AS 'is_canceled_87',
 
CASE
  WHEN segment = 30
 		AND (subscription_start < first_day)
    AND (subscription_end > first_day
    OR subscription_end IS NULL)
 THEN 1
 ELSE 0
END AS 'is_active_30',
 
 CASE
 	WHEN segment = 30
 	AND (subscription_end BETWEEN first_day AND last_day)
THEN 1
ELSE 0
END AS 'is_canceled_30'
FROM cross_join),

status_aggregate AS
(SELECT month,
SUM(is_active_87) AS 'sum_active_87',
SUM(is_active_30) AS 'sum_active_30',
SUM(is_canceled_87) AS 'sum_canceled_87',
SUM(is_canceled_30) AS 'sum_canceled_30'
FROM status
GROUP BY month)
 
SELECT month,
1.0* sum_canceled_87 / sum_active_87 AS 'churn_87',
1.0* sum_canceled_30 / sum_active_30 AS 'churn_30'
FROM status_aggregate; 

--- bonus question
I would modify the query by adding the segment column to my results and using Excel to filter my results should I want specific segments only rather than each segement as it's own column.
